services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal

  backup:
    image: .
    volumes:
      - ./backup.sh:/usr/local/bin/backup.sh
      - ./restore.sh:/usr/local/bin/restore.sh
    environment:
      # PostgreSQL Connection
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres

      # S3 Configuration
      RCLONE_S3_PROVIDER: "Other"
      RCLONE_S3_ENDPOINT: "http://minio:9000"
      RCLONE_S3_ACCESS_KEY_ID: minioadmin
      RCLONE_S3_SECRET_ACCESS_KEY: minioadmin
      RCLONE_S3_BUCKET: backups
      BACKUP_SCHEDULE: "${BACKUP_SCHEDULE:-0 1 * * *}"

    command: >
      sh -c "echo '$${BACKUP_SCHEDULE} /usr/local/bin/backup.sh 2>&1 | logger -t pg_backup'
      | crontab - && crond -f"

    depends_on:
      postgres:
        condition: service_healthy

    networks:
      - internal

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_BROWSER: "off"
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 2s
      retries: 10

  # Test helper with MinIO client
  mc:
    image: minio/mc:latest
    entrypoint: ""
    command: >
      /bin/sh -c "
      until mc alias set s3 http://minio:9000 minioadmin minioadmin; do sleep 1; done
      tail -f /dev/null"
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - minio-data:/data
    networks:
      - internal
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  minio-data:

networks:
  internal:
    driver: bridge
